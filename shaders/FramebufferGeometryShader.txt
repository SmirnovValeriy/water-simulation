#version 330 core

const float PI = 3.141592653589793238462643;

layout (points) in;
layout (triangle_strip, max_vertices = 4) out;

in VS_OUT {
  vec2 pos;
} gs_in[];

uniform float w;
uniform vec2 center;
uniform float radius;
uniform bool drop;
uniform float step;

uniform sampler2D previousWater;
uniform sampler2D currentWater;

out vec4 color;

void main() {
    vec4 up = vec4(0.0, 2 * step, 0.0, 0.0);
    vec4 right = vec4(2 * step, 0.0, 0.0, 0.0);

    vec2 xOffset = vec2(step, 0.0);
    vec2 yOffset = vec2(0.0, step);

    vec2 newPos = gs_in[0].pos + xOffset * 0.5 + yOffset * 0.5;

    float avg = (texture(currentWater, newPos - xOffset).r + 
         texture(currentWater, newPos - yOffset).r +
         texture(currentWater, newPos + xOffset).r +
         texture(currentWater, newPos + yOffset).r);
    avg = avg * 0.25;
    float prev = texture(previousWater, newPos).r;
    float height = (1 - w) * prev + w * avg;
    if (drop) {
        float d = max(0.0, 1.0 - length(gs_in[0].pos - center) / radius);
        d = 0.5 - cos(d * PI) * 0.5;
        height += d * 0.015;
    }
    color = vec4(height, 0.0, 0.0, 1.0);
    gl_Position = gl_in[0].gl_Position; 
    EmitVertex();
    gl_Position = gl_in[0].gl_Position + right; 
    EmitVertex();
    gl_Position = gl_in[0].gl_Position + up; 
    EmitVertex();
    gl_Position = gl_in[0].gl_Position + up + right; 
    EmitVertex();
    EndPrimitive();
}  
