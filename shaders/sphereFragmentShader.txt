#version 330 core

in vec3 normal;
in vec3 FragPos;

uniform vec3 lightPos;
uniform vec4 sphereColor;
uniform vec4 lightColor;
uniform float baseColorPart;
uniform vec3 viewPos;
uniform float specularStrength;

out vec4 color;

void main() {
  vec3 lightDir = normalize(lightPos - FragPos);
  float diff = max(dot(normal, lightDir), 0.0);
  vec3 viewDir = normalize(viewPos - FragPos);
  vec3 reflectDir = reflect(-lightDir, normal);
  float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
  float specular = specularStrength * spec;
  color = sphereColor * (baseColorPart + diff + specular) * lightColor;
  color.a = sphereColor.a;
}
